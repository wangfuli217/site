#+SETUPFILE: ~/site/tpl/site-tpl.org
#+TITLE: 极客与团队
#+DATE: 2014-07-24 00:00:00

前天经 [[http://kumu-linux.github.io/][枯木]] 推荐，花了一下午时间看了下《极客与团队:软件工程师的团队生存秘笈》这本书。类似的书籍看过一些了，所以看这本书给我的冲击力并不是很大，
不过还是学到了很多东西和一些赞同的观点，这里分享一下。

#+BEGIN_QUOTE
要小心本能的崇拜事物。
#+END_QUOTE

这个观点我以前就有了，第一次得到验证是看了 [[http://www.yinwang.org/][王垠]] 的几篇博客: [[http://news.cnblogs.com/n/197460/][我和权威的故事]]，[[http://news.cnblogs.com/n/208315/][批判的价值]]。遇到的人基本上都是搞技术的，一旦你试图去解释说着推翻他所认同的观点，
他会用一百种理由来反驳你或者鄙视你，而不会认真的思考你说的是否正确。尤其以在常混社区的人和接触 Linux 技术的人为主。他们会无脑的崇拜某一门语言(比如 go)，
和无脑的理解某一项技术(Linux 管道)，觉得他们完美无缺，而且会用他们的方式证明给你看，"嗯，看，我们xx语言也可以实现哦！"。
其实，崇拜一件事物本身是没有错的，但不应该在崇拜的同时丧失了自己的判断力。也就是这里所说的"本能"。

#+BEGIN_QUOTE
招聘时应该考虑文化契合度。
#+END_QUOTE

原话我忘了，大体意思是说当你给你的团队招人的时候，要考虑到这个人和你团队文化的契合程度，要有一些相同的认知。
这也是这本书很重要的一个观点，强调团队的重要性，而不是个人技术(当然，不是个人技术不重要，切勿对号入座)。

#+BEGIN_QUOTE
攻击性性格（通常）也能够适应比较平和和安静的环境，但是比较内向的人却很少能在激烈的环境里生存（或者开心的工作）。
#+END_QUOTE

这一点，仁者见仁吧。我不太喜欢和特别内向的人一起做事。

#+BEGIN_QUOTE
晨会。
#+END_QUOTE

我觉得晨会应该有下面 3 个内容：

1. 工作内容
2. 工作中存在的问题
3. 需要的帮助

敏捷开发强调人与人之间的沟通，于是就有了晨会这么个玩意。晨会的重点应该是后两项，需要的帮助和工作中需要的棘手问题，而不是工作内容，
过分的强调工作内容会让人非常反感晨会，尤其对新人而言。晨会还有一个非常重要的点是，晨会的主持者要把握好每个人发言的时间，且晨会应该是简短的。

#+BEGIN_QUOTE
应该努力去雇佣那些比你聪明、可以替代你的人。这对很多人来说难以接受，因为这些人会经常挑战你（还会在你出错的时候毫不留情的指出来）。
但同样是这些工程师，他们会不断的给你惊喜，交出漂亮的工作。他们能领导自己更上一层楼，有些人还会主动想去带领团队。你不应该视此为意图篡夺权位，
而应该把它看作是让你多领导一只团队的机会，让你可以去探索新的机会，甚至可以放心去度假，而不必每天都盯着团队的进度。
#+END_QUOTE

用师者王, 用友者霸, 用徒者亡。

#+BEGIN_QUOTE
此外还有一个非常重要的部分是要关心他们的职业生涯。如果你问你的队员五年后对自己有什么展望，绝大多数他们都会耸耸肩表示没想过。
其实这种情况下大多数工程师都不会说太多，但是每个工程师心里总有一些想要在未来五年之内完成的东西，比方说升值、学一点新东西、发布重要的产品，
或者是和牛人一起工作等。
不管有没有说出来，大多数工程师心里都是有抱负的。要是你想当一个好领导，就应该考虑一下怎么帮忙才能够实现这些愿望，让你的团队知道你真的放在欣赏了。
最重要的就是了解这些没有说出来的目标，就让它们显现出来，这样才能在给出职业建议的时候有可以一来的标准来评估不同情况和机会。
#+END_QUOTE

我不站在一个 leader 的角度看这段话(毕竟我站不到...)。入职的新人遇到的第一个团队，第一个导师非常重要，他(们)很有可能影响到你的整个职业规划。
身边的例子太多了，不列举了。不要把自己的想法(观点)雪藏，遇到的合适的人，可以说一说的，可能某一句话会影响你几年。

#+BEGIN_QUOTE
抓住重点 一个人在发泄、发泄情绪的时候，一定要认真的听他说。虽然会夹杂一些愤怒和粗俗的话，但是要相信对方本质上是没有恶意的。
他说的到底有没有道理呢？我们是不是可以从他的经验里学到什么？他的想法是不是值得回应？很多时候答案都是肯定的------
那就是虽然他语言有点刻薄，但背后其实有亮点的，所以应该尽可能把争执再次引向技术讨论。
#+END_QUOTE

这一点我做的不好，我大部分有时候过分的相信自己的观点了，也吃过一些亏了。

#+BEGIN_QUOTE
有时候，当无论怎么努力都是徒劳的时候，你就应该果断放弃，继续向前。就算你已经花费了大量的精力去纠正有害的行为，也要学着去承认失败。

创意是非常吸引人的东西如果你不在意是不是一定要别人知道是你原创的话，创意往往能变的非常有活力！
#+END_QUOTE

相信自己直觉虽然是好事，但听一下你信任的人是怎么说是很有价值的。
好的举措应该是大家可能每天都面临这个问题，但是没有人愿意（或者说有能力）来总结出来以及找到解决方案，这时候你解决了，
这样的想法（idea）才是真正有意义的。酷的想法，大家觉得酷你才有可能做成(尤其是在公司环境下)。

#+BEGIN_QUOTE
"进取性" 和 "防御性" 的工作
身为工程师，应该把精力放在发布产品上，而不是其他的事情上面。发布产品比任何事情都能在公司内部提升你的信誉、声望，以及政治资本。
发布产品是曝光率极高的大事，能充分展示你的成果。尽管在清理代码和重构上面花大力气是非常有诱惑力的想法，但是经验教训告诉我们，
不要花太多时间在这种防御性的工作上，很少有人看重这些，到时候你会发现自己的处境很尴尬，因为花了那么多的时间，
你却拿不出什么（政治上）看起来很重要的成果。这样你不但得不到别人的认可，还很容易导致自己的项目被取消。
#+END_QUOTE

事实上就是这样的。

#+BEGIN_QUOTE
如果你改变不了整个体系，继续投入精力去改变它是没有意义的。
你应该把经历放到怎么离开它上面去：更新自己的简历，去问问周围的好朋友，看看有没有机会到其他公司就职；自学一点新知识。
今时今日，身为工程师的最大好处就是优秀的工程师永远是紧缺的，因此你完全有能力去掌握自己的未来。
#+END_QUOTE

这是整本书我最喜欢的两个观点：

1. 只做正确的事，随时准备被炒；
2. 优秀的工程师永远是紧缺的。
