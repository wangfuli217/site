#+SETUPFILE: ~/site/tpl/site-tpl.org
#+TITLE: 使用 org-mode 搭建网站
#+OPTIONS: toc:nil

** 背景

2018 年的 8 月份开始写 [[https://github.com/zhangjie2012/qwerty-server/][qwerty]], 陆陆续续写了有一年左右，在功能上比较完善的情况下，坚持使用了一段时间，
还是发现了一些问题：

- antd pro 这种纯前端，对搜索引擎不太友好，也就是说不好做 SEO，写的文章被浏览器不容易收录。这是个问题，
  但仅仅是这个问题倒还好，因为后来我写文章就不在意这些了。
- 使用 django admin 做后台，文章的二次编辑有点麻烦，因为前端和后端是分离的，本身跳转到编辑就有些麻烦，
  而且网页上的编辑毕竟没有在编辑器中编辑方便，每次都要拷贝出来，改好了再粘贴进去。
- 备份是个问题，虽然我后来写了脚本定时备份 MySQL 然后上传到腾讯云。
- 我也不想用云主机了，不管是阿里云还是腾讯云，你坚持用下来就知道总是会有一些奇奇怪怪的问题，本身博客
  服务就是很轻量级的一个东西，还要操心这操心那··

上面这些问题确实是存在的，但是并不是我放弃 qwerty 的根本原因。qwerty 要解决的问题本质是还是知识管理，
知识管理说起来简单，做起来有点难。以 Docker 为例：

- 刚开始的时候，我想要写写 _学习笔记_
- 看官方文档的时候，或者别的博客，想要把 _某几个点记录下来_ ，或者保存 _一张图片_
- 日常使用遇到的问题，找到了解决办法，我想有个 _FAQ_ 的东西
- 遇到的好的资料，我想把一些 _资源链接_ 记录下来
- 当我比较熟了之后，有了自己的理解，我想写篇 _博客_ 记录一下
- 还有的时候，我想写一些 _TODO_ 当前没时间看的东西，先记一下，稍后看

不光是学 Docker，每一个技术基本上都需要经历这样的阶段，我经历了很多次，所以一直想要一个比较好的解决方案。

qwerty 已经把这个问题解决的差不多了：

#+begin_quote
一些点的东西先用 issue 记录，比如 零散的记录，FAQ，TODO，资源链接等。等 issue 汇总的多了整理成 wiki 或者博客。
#+end_quote

*只是操作起来有点复杂* ，wiki 是用 [simiki](http://simiki.org/) 搭建的，还是要跨几个地方，曾经也想过 qwerty 直
接把 wiki 也做了，但是成本有点高。

** 转变

我是个 Emacs 老用户了，其实很多人使用 Emacs 并不是因为他与 Vim 齐名的编辑功能，而是

** 拥抱 org-mode
