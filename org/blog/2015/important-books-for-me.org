#+SETUPFILE: ~/site/tpl/site-tpl.org
#+TITLE: 目前为止，对我影响最大的三本非纯技术书
#+DATE: 2015-05-18 00:00:00

* 重来------更为简单有效的商业思维

[[https://blog-1252349778.cos.ap-beijing.myqcloud.com/2015/rework.png]]

这是一本我个人读过最好的一本书，也是我逢人必推的一本书。非常精简、一节一个观点而不超过百字，从头到尾看的时候没有一点疲惫和厌烦感，
在这之前我并没有一个非常理想的公司，看完之后才发现我想要的就是 37Singals 这种类型的公司。

我一直信奉的一个观点是：“如果一个产品，你自己都做不喜欢，那么你凭什么让别人喜欢呢？”，这一观点在 重来 这本书中得到了验证。

这本书涉及的方面很多，几乎这些问题都会你所处的公司中遇到，有关公司发展战略、项目、团队管理、团队文化、招聘、团队中的牛人、
工作狂（加班）等等。

分享几个我特别喜欢的几个观点:

- 小公司并不只是一块跳板。小公司本身就是一个伟大的目标。
- 工作狂不是英雄。他们没有力挽狂澜，不是是浪费时间而已。真正的英雄早就想出办法、搞定一切，然后回家了。
- 在你人生中真正有意义的的是你做什么，而不是你想过什么或者计划过什么。
- 挠自己的痒处。想创造一个伟大的产品或者卓越的服务，最简单直接的办法就是做你自己想要的东西。
- 要记住，时尚会凋零。只有你聚焦于长久的功能时，你才会发现自己把握了永不落伍的东西。
- 一个具有 6 个月经验的应聘者和一个具有 6 年工作经验的应聘者相比，其差别小得让人吃惊。
  真的差别来自于个人的努力程度、性格差异以及智力水平。
- ...

* 程序员修炼之道------从小工到专家

[[https://blog-1252349778.cos.ap-beijing.myqcloud.com/2015/prag-prog.png]]

首先要吐槽一下这本书的译名：“修炼之道”，这种名字就像《100天精通C++》一样让人觉得山寨，
个人觉得译为《注重实效的程序员》比《程序员修炼之道》要强一些，更贴切内容。

与《代码大全》相对应，这本书也有人称之为《代码小全》，《代码大全》主要讲的是软件构建（软件开发过程中的方方面面），
我觉得内容涵盖的方面差不多，只不过这本书内容内聚性高一些，《代码大全》则比较零散。

我觉得 《程序员修炼之道》的核心思想就是 DRY（Don't Repeat Yourself）原则，
这一思想可以落实到软件开发的方方面面，永远不要重复自己。

一个团队的 流程标准化、文档化、自动化等都是 DRY 的体现。团队的流程标准化就是把团队中每个需求从提出到落实再到测试上线这个过程
抽象出来，然后优化流程，信息共享，节省沟通成本；自动化无非就是能让机器做的，不要耗费人力每天都去做；
别人趟过的坑，争取让团队中的其他人不要再趟...

再谈谈程序设计，不管是面向对象还是面向过程，都是为了让程序员不要做重复性的劳动，对我来讲，在同一个模块中，类似的代码，
一般不会让它出现两遍，如果每天都要做的事情，我都会用直接写个脚本，挂个定时任务。
我一直觉得，事情很难区分它的难易程度，只要是这件事情让你分心了，这就是一种极大的浪费，能让机器就让机器去做，你完全不用关心。

举个例子：我经常看 Dota 视频，每天都会去优酷上各种翻各个解说，看有没有更新，很繁琐。
于是我自己做一个网站(Dota 更了吗:http://www.genglema.com)，从优酷上爬每个解说的最新视频，展现出来，
这样我只要打开我的网站就可以看视频了，真是爽！

我推荐这本书的原因是他让我学到的东西，我可以用到职场、生活的方方面面，可以更好解决了问题而且节省了时间。

说些题外话：

以前总是觉得自己熬夜写代码是非常“光荣”和值得“自豪”的一种行为，后来才发现自己是多么的幼稚。可是这种行为居然存在很多公司中，
崇尚加班并且引以为豪，总是用程序员的称号来自黑开脱，还是用上面的一句话来概括吧：
“工作狂不是英雄。他们没有力挽狂澜，不是是浪费时间而已。真正的英雄早就想出办法、搞定一切，然后回家了”。

对我来讲，加班文化，一方面是对个人能力的一种否定，另外一方面说明这个项目是存在很大的管理问题的。

* 黑客与画家------来自计算机时代的高见

https://blog-1252349778.cos.ap-beijing.myqcloud.com/2015/hkyhj.png

评价一本书的是否为"好书"的标准为：在不同的阶段，再看一遍你总会有新的收获，令你惊喜不已。
以《极客与团队》这本书为例，我第一遍看还觉得挺不错的，第二遍看的时候就开始有些厌烦了，
感受不到新的东西（不过没看过的还是推荐你看看）。

黑客与画家不像前两本观点明确，整本书是一个体系，它是 保罗-格雷厄姆 的文集，13 年的时候在北京买的这本书（还是精装版哦，哈哈），
当时看有些章节感觉很喜欢，比如 黑客与画家、良好的坏习惯、如何创造财富、拒绝平庸、设计者的品位。
而对另外一些章节不感冒，比如：不能说的话、书呆子的复仇。但是，今年再看一遍的时候发现好像讲的还有道理的。
这本书也有一部分是讲编程语言的，有些观点和《代码的未来》类似，推荐看看，加深一下对语言设计的理解。

Fenng 写过一篇书评在这里：http://dbanotes.net/review/hackers_and_painters.html

#+BEGIN_QUOTE
致富的最好办法是创造财富（而不是掠夺），自己创业或是加入创业团队是致富的可靠方法(就我来看，如果你是官二代或是富二代，
那么另当别论)。
#+END_QUOTE

--------------

搞我们这一行的，应该读过很多杂七杂八的书，有些书可能在别人眼里她狗屁不是，但是在你的特定时间段她出现了，
解决了你长时间思索却未果的问题，改变你了看法。
