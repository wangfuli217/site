#+SETUPFILE: ~/site/tpl/site-tpl.org
#+TITLE: 从技术逐渐到产品
#+DATE: 2016-04-04 00:00:00

前两天看了 Adele 的 Rolling In The Deep
的[[http://music.163.com/#/mv?id=389187][演唱会版本]]，感触很大。这是一个很早的视频了，我当时在做乐魂的时候，微博上关注了很多音乐类的用户，当时看到这个视频只是觉得音乐很赞。再次看到的时候，想到的确是：人一辈子，可以有一批人可以追随；或者找几个志同道合的朋友做一些有趣的事，是多么幸福的一件事情。

对于每个人的认知，只要他投入精力去做一些事情，几乎每天都在变。这篇文章讲讲自己从毕业到现在的一些经历和认知上的变化(尽量保证简短，看了以前的文章，觉得自己废话太多的)。

--------------

[1]

我喜欢把一些乱糟糟的东西，整理的整洁有序，喜欢这个过程中获得的成就感。如果你看过我一些文章，应该能猜的到我是一个偏于自我的人，并且伴有些许偏执和强迫症。其实这个性格在别的行业会处处碰壁，但是放到
IT 行业，可能表现的不会那么明显。

在大学的时候，我很喜欢写代码，当时看完[[http://blog.codingnow.com/][云风]]的[[http://linode.codingnow.com/cgi-bin/mt/mt-search.cgi?IncludeBlogs=1&search=%C4%C7%D0%A9%C8%D5%D7%D3][那些日子]]系列，崇拜之极，心想以后就要成为这样的人。

比较有趣的两件事情，出于某些鄙视链，我选择了 汇编/C/C++/系统底层
这一系列的技术；又觉得自己要和别人不一样，在 Vim 和 Emacs 之间选择了
Emacs 。现在想想只能用两个字来形容当时的选择：呵呵 。

在刚入风行的时候，我的想法非常简单，只要让我写代码，干什么无所谓的，就想做一个技术上的牛人。羡慕那种，别人搞不定的问题，你坐下来啪啦啪啦的敲几下键盘，然后站起来头也不回的甩一句："可以了"。你不用告诉别人问题的原因，以及你的解决方法，别人只需要看着你离开座位的背影，并投以崇拜的眼神就够了。有多少人心里有过这样的想法，也有多少人为了这种可有可无的崇拜感，埋头苦练技术与工具。

然而事与愿违，我发现项目组的人编码能力并不那么强，基于很多历史原因，工程代码风格不统一，代码凌乱，日常工作充斥着各种会议(晨会、例会)
...

我经常会觉得每天做的一些没有一些挑战性，写的代码稀松平常，还需要写单元测试。还有几件事情，我内心抗拒了很久：

- 在风行，对于工程师的一个基本要求是:
  要做数据分析。数据分析几乎是每周必须要做是的事情，还要图表化展现，给大家讲解；
- 客户端与底层的协作沟通，遇到问题之后，大家相互质疑，相互T皮球；
- 虽然是底层开发部门，要经常配合客服给线上用户解决问题，QQ
  远程解决问题，非常头疼；

之所以抗拒，是因为我想写代码，不想做这些事情，根本原因是，我特么真的不会啊！

Rework
这本书对我的影响非常大，让我对小而美的团队推崇之至。看的东西多了，很对理想化的东西不断的洗脑，以至于我对团队的要求、文档化、标准化这一套东西渴望至极。

现实的团队和理想化的团队对立也就越来越大，内心也很矛盾。不到一年，我就觉得这个团队并不是我想要的，年度谈话之后就离开了风行。

[2]

到江游的前半年里，我一直在思考在风行的那一年经历。在工作期间的技术成长并没有我在下班之后自己折腾学的多，技术硬实力上提高真的不多，但是软实力上的提升非常大，很多人工作两三年可能也不会有那些提升的。

后来发现我已经习惯于站在数据的角度去分析问题，与人沟通会站在对方的角度思考，最重要的开始站在用户的角度看待产品。这些换位思考，是我最大的收获。坦白讲，风行的一年里，我从来没有把自己当成一个产品的使用者，只是一个技术执行者，仅此而已。

现在想想，也验证那句话，痛苦才能让你成长。

离开的风行的时候，我对技术和工具产生了质疑，觉得技术和工具能做的事情有限的，如果公司的方向是错的，那么团队再强，技术再屌，也没用什么用。从那之后，我有意识的让自己对技术和工具少一些执念。一个技术执念者，通常会因为
Linux/Mac，C++/Python, Vim/Emacs
甚至一个编程字体的选择，都会花很多的精力去研究，甚至参加各种口水战，在混论坛的几年时间里，我也没少做这样的事情。现在没有办法评判过去的对与错，但是我至少不会再在这些事情上浪费精力了，技术、工具能满足需求就好。

在江游与风行不同的地方在于，风行是一个产品维护的角色，也就是从 1 到 100
的过程，如何让产品健壮、稳定，也就是变的更好；江游则是从 0 到 1 ，再从 1
到
100，比风行要难的多。从客户端底层到游戏服务器开发，技术上、工具上的差距还是挺大的，在刚到江游的那几个月里，对我自己的技术提升是非常大的。

在江游遇到了广宇，也就是那种遇到问题，他坐下来，黑框口啪啦啪啦几个命令解决问题之后，喊一嗓子搞定了，拿包烟和打火机出去抽烟去了，你只能看他执行过的命令和离开的背影。

现在想想，当时最爽的两件事情是，听鳗鱼讲故事，和鳗鱼一起头脑风暴。鳗鱼是我非常敬佩的一个人，我印象非常深刻，第一次一起吃饭的时候，他大体说过，做产品，如果你一直失败，那么你永远都不知道怎么成功；反之，你不断的做成事情，才有能做成下一件。也就是说"失败是成功之母"
对于这个行业是有失偏颇的。对于类似的理论，我在 rework
里面看过，但是将信将疑，毕竟自己没有经历过。

因为公司管饭，加上几个程序里单身都比较多，下了班以后，鳗鱼牵头一帮人坐在一起头脑风暴，经常扯着扯着就已经九点十点了，这些一起讨论的内容最终都落实到了游戏中。鳗鱼另外一个离开的地方在于他总能利用一个话题把一堆人拉到一起，大家激情澎湃的跨边界闲扯。

那个时候我才发现，把自己的想法可以落实到产品中是非常幸福的一件事。久而久之，就开始关注产品本身，而不只是技术。等游戏上线以后，通过数据验证自己的想法，然后调整策略，再验证，如此迭代。这个过程要比做技术有意思多了。

江游跟着项目组一起经历了很多事情，个人的成长更是不必说。离开项目组是无奈之选，从现在看，离开的选择也是很正确的。

[3]

其实江游是对我刚到江游的质疑做了一个很好的验证：团队再强，技术再屌，如果公司层面上出了问题，你能做的事情太少了。这两年半的经历，让我看明白了所谓软件工程，只是一句写在书上和别人文中的套话，研究方法不如找一群聪明的人一起做事。

到七行这半年里，用的技术和环境和以前差距很大，很多地方都很陌生，但是感觉反而比以前更顺手了。*当你不在执著于某一个环节，而是直接去找问题的本质的时候，你会发现，事情比你想象的简单的多。*
我很讨厌程序员这个词，总是以工程师标榜自己，我心里知道，自己其实干的只不过是程序员的活，离工程师还差的很远。现在的水平，总算离自己心目中的工程师标准差的不多了。

在七行做洗车店这个项目，一开始我总觉得自己从游戏到传统行业跨度会比较大，等线下和运营的人沟通过之后才知道，不同的行业，解决问题的思路惊人的相似。比做游戏更爽的一件事情是，游戏你对用户的感知是通过数据分析，而现在是面对面的沟通，解决的是实实在在的问题，这个过程非常爽。

三年下来，经历了一些事情，不断的打自己的脸，也收获了很多，感谢那些曾经影响过我的人。

未来，我希望自己能有一款属于自己的产品，不再是一个技术人员，而是一个产品的设计者。
